"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4029],{3447:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var t=n(4848),i=n(8453);const o={},s="Enumeration: ColorScheme",c={id:"capacitor/enums/ColorScheme",title:"ColorScheme",description:"@authgear/capacitor / ColorScheme",source:"@site/docs/capacitor/enums/ColorScheme.md",sourceDirName:"capacitor/enums",slug:"/capacitor/enums/ColorScheme",permalink:"/authgear-sdk-js/docs/capacitor/enums/ColorScheme",draft:!1,unlisted:!1,editUrl:"https://github.com/authgear/authgear-sdk-js/edit/master/website/docs/capacitor/enums/ColorScheme.md",tags:[],version:"current",frontMatter:{},sidebar:"root",previous:{title:"BiometricLAPolicy",permalink:"/authgear-sdk-js/docs/capacitor/enums/BiometricLAPolicy"},next:{title:"ErrorName",permalink:"/authgear-sdk-js/docs/capacitor/enums/ErrorName"}},a={},h=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Enumeration Members",id:"enumeration-members",level:3},{value:"Enumeration Members",id:"enumeration-members-1",level:2},{value:"<a></a> Dark",id:"-dark",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"<a></a> Light",id:"-light",level:3},{value:"Defined in",id:"defined-in-1",level:4}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"/authgear-sdk-js/docs/capacitor",children:"@authgear/capacitor"})," / ColorScheme"]}),"\n",(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"enumeration-colorscheme",children:"Enumeration: ColorScheme"})}),"\n",(0,t.jsx)(r.p,{children:"ColorScheme represents the color scheme supported by Authgear.\r\nA colorscheme is either light or dark. Authgear supports both by default."}),"\n",(0,t.jsx)(r.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,t.jsx)(r.h3,{id:"enumeration-members",children:"Enumeration Members"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/authgear-sdk-js/docs/capacitor/enums/ColorScheme#dark",children:"Dark"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/authgear-sdk-js/docs/capacitor/enums/ColorScheme#light",children:"Light"})}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"enumeration-members-1",children:"Enumeration Members"}),"\n",(0,t.jsxs)(r.h3,{id:"-dark",children:[(0,t.jsx)("a",{id:"dark",name:"dark"})," Dark"]}),"\n",(0,t.jsxs)(r.p,{children:["\u2022 ",(0,t.jsx)(r.strong,{children:"Dark"})," = ",(0,t.jsx)(r.code,{children:'"dark"'})]}),"\n",(0,t.jsx)(r.p,{children:'Force to use the dark color scheme in the AuthUI when the project config is "Auto".'}),"\n",(0,t.jsx)(r.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(r.p,{children:"packages/authgear-capacitor/index.d.ts:41"}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.h3,{id:"-light",children:[(0,t.jsx)("a",{id:"light",name:"light"})," Light"]}),"\n",(0,t.jsxs)(r.p,{children:["\u2022 ",(0,t.jsx)(r.strong,{children:"Light"})," = ",(0,t.jsx)(r.code,{children:'"light"'})]}),"\n",(0,t.jsx)(r.p,{children:'Force to use the light color scheme in the AuthUI when the project config is "Auto".'}),"\n",(0,t.jsx)(r.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(r.p,{children:"packages/authgear-capacitor/index.d.ts:37"})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var t=n(6540);const i={},o=t.createContext(i);function s(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);