/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "AuthgearReactNativeSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_storageGetItem(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->storageGetItem(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_storageSetItem(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->storageSetItem(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_storageDeleteItem(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->storageDeleteItem(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_getDeviceInfo(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->getDeviceInfo(
    rt
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_randomBytes(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->randomBytes(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_sha256String(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->sha256String(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_generateUUID(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->generateUUID(
    rt
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_openAuthorizeURL(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->openAuthorizeURL(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asBool()
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_openAuthorizeURLWithWebView(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->openAuthorizeURLWithWebView(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_dismiss(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->dismiss(
    rt
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_getAnonymousKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->getAnonymousKey(
    rt,
    count <= 0 || args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asString(rt))
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_signAnonymousToken(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->signAnonymousToken(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_createBiometricPrivateKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->createBiometricPrivateKey(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_signWithBiometricPrivateKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->signWithBiometricPrivateKey(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_removeBiometricPrivateKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->removeBiometricPrivateKey(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_checkBiometricSupported(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->checkBiometricSupported(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_checkDPoPSupported(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->checkDPoPSupported(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_createDPoPPrivateKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->createDPoPPrivateKey(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_signWithDPoPPrivateKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->signWithDPoPPrivateKey(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_checkDPoPPrivateKey(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->checkDPoPPrivateKey(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_computeDPoPJKT(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAuthgearReactNativeCxxSpecJSI *>(&turboModule)->computeDPoPJKT(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
}

NativeAuthgearReactNativeCxxSpecJSI::NativeAuthgearReactNativeCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("AuthgearReactNative", jsInvoker) {
  methodMap_["storageGetItem"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_storageGetItem};
  methodMap_["storageSetItem"] = MethodMetadata {2, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_storageSetItem};
  methodMap_["storageDeleteItem"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_storageDeleteItem};
  methodMap_["getDeviceInfo"] = MethodMetadata {0, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_getDeviceInfo};
  methodMap_["randomBytes"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_randomBytes};
  methodMap_["sha256String"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_sha256String};
  methodMap_["generateUUID"] = MethodMetadata {0, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_generateUUID};
  methodMap_["openAuthorizeURL"] = MethodMetadata {3, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_openAuthorizeURL};
  methodMap_["openAuthorizeURLWithWebView"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_openAuthorizeURLWithWebView};
  methodMap_["dismiss"] = MethodMetadata {0, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_dismiss};
  methodMap_["getAnonymousKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_getAnonymousKey};
  methodMap_["signAnonymousToken"] = MethodMetadata {2, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_signAnonymousToken};
  methodMap_["createBiometricPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_createBiometricPrivateKey};
  methodMap_["signWithBiometricPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_signWithBiometricPrivateKey};
  methodMap_["removeBiometricPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_removeBiometricPrivateKey};
  methodMap_["checkBiometricSupported"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_checkBiometricSupported};
  methodMap_["checkDPoPSupported"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_checkDPoPSupported};
  methodMap_["createDPoPPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_createDPoPPrivateKey};
  methodMap_["signWithDPoPPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_signWithDPoPPrivateKey};
  methodMap_["checkDPoPPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_checkDPoPPrivateKey};
  methodMap_["computeDPoPJKT"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeCxxSpecJSI_computeDPoPJKT};
}


} // namespace facebook::react
