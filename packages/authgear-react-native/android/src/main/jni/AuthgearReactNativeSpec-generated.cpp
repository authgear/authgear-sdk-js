
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "AuthgearReactNativeSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_storageGetItem(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "storageGetItem", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_storageSetItem(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "storageSetItem", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_storageDeleteItem(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "storageDeleteItem", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_getDeviceInfo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getDeviceInfo", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_randomBytes(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "randomBytes", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_sha256String(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "sha256String", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_generateUUID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "generateUUID", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_openAuthorizeURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "openAuthorizeURL", "(Ljava/lang/String;Ljava/lang/String;ZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_openAuthorizeURLWithWebView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "openAuthorizeURLWithWebView", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_dismiss(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "dismiss", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_getAnonymousKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getAnonymousKey", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_signAnonymousToken(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "signAnonymousToken", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_createBiometricPrivateKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "createBiometricPrivateKey", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_signWithBiometricPrivateKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "signWithBiometricPrivateKey", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_removeBiometricPrivateKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "removeBiometricPrivateKey", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_checkBiometricSupported(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "checkBiometricSupported", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_checkDPoPSupported(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "checkDPoPSupported", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_createDPoPPrivateKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "createDPoPPrivateKey", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_signWithDPoPPrivateKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "signWithDPoPPrivateKey", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_checkDPoPPrivateKey(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "checkDPoPPrivateKey", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeAuthgearReactNativeSpecJSI_computeDPoPJKT(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "computeDPoPJKT", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeAuthgearReactNativeSpecJSI::NativeAuthgearReactNativeSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["storageGetItem"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_storageGetItem};
  methodMap_["storageSetItem"] = MethodMetadata {2, __hostFunction_NativeAuthgearReactNativeSpecJSI_storageSetItem};
  methodMap_["storageDeleteItem"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_storageDeleteItem};
  methodMap_["getDeviceInfo"] = MethodMetadata {0, __hostFunction_NativeAuthgearReactNativeSpecJSI_getDeviceInfo};
  methodMap_["randomBytes"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_randomBytes};
  methodMap_["sha256String"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_sha256String};
  methodMap_["generateUUID"] = MethodMetadata {0, __hostFunction_NativeAuthgearReactNativeSpecJSI_generateUUID};
  methodMap_["openAuthorizeURL"] = MethodMetadata {3, __hostFunction_NativeAuthgearReactNativeSpecJSI_openAuthorizeURL};
  methodMap_["openAuthorizeURLWithWebView"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_openAuthorizeURLWithWebView};
  methodMap_["dismiss"] = MethodMetadata {0, __hostFunction_NativeAuthgearReactNativeSpecJSI_dismiss};
  methodMap_["getAnonymousKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_getAnonymousKey};
  methodMap_["signAnonymousToken"] = MethodMetadata {2, __hostFunction_NativeAuthgearReactNativeSpecJSI_signAnonymousToken};
  methodMap_["createBiometricPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_createBiometricPrivateKey};
  methodMap_["signWithBiometricPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_signWithBiometricPrivateKey};
  methodMap_["removeBiometricPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_removeBiometricPrivateKey};
  methodMap_["checkBiometricSupported"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_checkBiometricSupported};
  methodMap_["checkDPoPSupported"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_checkDPoPSupported};
  methodMap_["createDPoPPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_createDPoPPrivateKey};
  methodMap_["signWithDPoPPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_signWithDPoPPrivateKey};
  methodMap_["checkDPoPPrivateKey"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_checkDPoPPrivateKey};
  methodMap_["computeDPoPJKT"] = MethodMetadata {1, __hostFunction_NativeAuthgearReactNativeSpecJSI_computeDPoPJKT};
  eventEmitterMap_["onAuthgearReactNative"] = std::make_shared<AsyncEventEmitter<folly::dynamic>>();
  configureEventEmitterCallback();
}

std::shared_ptr<TurboModule> AuthgearReactNativeSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "AuthgearReactNative") {
    return std::make_shared<NativeAuthgearReactNativeSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
